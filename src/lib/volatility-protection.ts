/**
 * üõ°Ô∏è Volatility Protection System 2025
 * 
 * –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Ä–µ–∑–µ—Ä–≤–∞–º–∏
 * –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –º–µ—Ö–∞–Ω–∏–∑–º–∞–º–∏ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
 */

export interface VolatilityMetrics {
  currentVolatility: number
  volatility24h: number
  volatility7d: number
  priceDeviation: number
  volumeSpike: boolean
  marketStress: 'low' | 'medium' | 'high' | 'extreme'
}

export interface StabilityReserve {
  id: string
  tonBalance: number
  ndtBalance: number
  totalValue: number
  utilizationRate: number
  lastRebalance: number
  autoRebalance: boolean
}

export interface ProtectionMechanism {
  id: string
  type: 'auto_buyback' | 'liquidity_injection' | 'rate_stabilization' | 'circuit_breaker'
  threshold: number
  isActive: boolean
  lastTriggered: number
  triggerCount: number
  effectiveness: number
}

export interface MarketIntervention {
  id: string
  type: 'buyback' | 'sell_off' | 'liquidity_add' | 'rate_fix'
  amount: number
  targetRate?: number
  timestamp: number
  success: boolean
  impact: number
}

export class VolatilityProtectionSystem {
  private stabilityReserve: StabilityReserve
  private protectionMechanisms: Map<string, ProtectionMechanism> = new Map()
  private marketInterventions: MarketIntervention[] = []
  private volatilityHistory: VolatilityMetrics[] = []
  private isMonitoring = false
  private monitoringInterval?: NodeJS.Timeout

  constructor() {
    this.initializeStabilityReserve()
    this.setupProtectionMechanisms()
    this.startMonitoring()
  }

  /**
   * üè¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  private initializeStabilityReserve(): void {
    this.stabilityReserve = {
      id: 'main',
      tonBalance: 10000, // 10,000 TON –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–∑–µ—Ä–≤
      ndtBalance: 427000, // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ NDT
      totalValue: 20000, // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ TON
      utilizationRate: 0,
      lastRebalance: Date.now(),
      autoRebalance: true
    }
  }

  /**
   * üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ –∑–∞—â–∏—Ç—ã
   */
  private setupProtectionMechanisms(): void {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–∫—É–ø NDT –ø—Ä–∏ –ø—Ä–æ—Å–∞–¥–∫–µ
    this.protectionMechanisms.set('auto_buyback', {
      id: 'auto_buyback',
      type: 'auto_buyback',
      threshold: 12, // 12% –ø—Ä–æ—Å–∞–¥–∫–∞ –∑–∞ 24 —á–∞—Å–∞
      isActive: true,
      lastTriggered: 0,
      triggerCount: 0,
      effectiveness: 0.85
    })

    // –ò–Ω—ä–µ–∫—Ü–∏—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
    this.protectionMechanisms.set('liquidity_injection', {
      id: 'liquidity_injection',
      type: 'liquidity_injection',
      threshold: 15, // 15% –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
      isActive: true,
      lastTriggered: 0,
      triggerCount: 0,
      effectiveness: 0.75
    })

    // –°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –∫—É—Ä—Å–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
    this.protectionMechanisms.set('rate_stabilization', {
      id: 'rate_stabilization',
      type: 'rate_stabilization',
      threshold: 20, // 20% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ
      isActive: true,
      lastTriggered: 0,
      triggerCount: 0,
      effectiveness: 0.90
    })

    // –ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ—Ä–≥–æ–≤
    this.protectionMechanisms.set('circuit_breaker', {
      id: 'circuit_breaker',
      type: 'circuit_breaker',
      threshold: 30, // 30% —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
      isActive: true,
      lastTriggered: 0,
      triggerCount: 0,
      effectiveness: 1.0
    })
  }

  /**
   * üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  private startMonitoring(): void {
    if (this.isMonitoring) return
    
    this.isMonitoring = true
    this.monitoringInterval = setInterval(async () => {
      await this.monitorVolatility()
    }, 5000) // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  }

  /**
   * üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  private async monitorVolatility(): Promise<void> {
    try {
      const metrics = await this.calculateVolatilityMetrics()
      this.volatilityHistory.push(metrics)
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 1000 –∑–∞–ø–∏—Å—è–º–∏
      if (this.volatilityHistory.length > 1000) {
        this.volatilityHistory = this.volatilityHistory.slice(-1000)
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
      await this.checkProtectionTriggers(metrics)
      
    } catch (error) {
      console.error('Error monitoring volatility:', String(error).replace(/[\r\n]/g, ' '))
    }
  }

  /**
   * üìä –†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  private async calculateVolatilityMetrics(): Promise<VolatilityMetrics> {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Ä—ã–Ω–∫–∞
    // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º—É–ª—è—Ü–∏—é
    
    const currentPrice = 42.7 + (Math.random() - 0.5) * 5 // ¬±2.5 TON –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
    const averagePrice = 42.7
    const priceDeviation = Math.abs((currentPrice - averagePrice) / averagePrice) * 100
    
    // –†–∞—Å—á–µ—Ç –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
    const volatility24h = this.calculateHistoricalVolatility(24)
    const volatility7d = this.calculateHistoricalVolatility(168) // 7 –¥–Ω–µ–π –≤ —á–∞—Å–∞—Ö
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞ —Ä—ã–Ω–∫–∞
    const marketStress = this.determineMarketStress(volatility24h, priceDeviation)
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–ø–ª–µ—Å–∫–∞ –æ–±—ä–µ–º–∞
    const volumeSpike = this.detectVolumeSpike()
    
    return {
      currentVolatility: volatility24h,
      volatility24h,
      volatility7d,
      priceDeviation,
      volumeSpike,
      marketStress
    }
  }

  /**
   * üìà –†–∞—Å—á–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  private calculateHistoricalVolatility(hours: number): number {
    // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
    const baseVolatility = 5 + Math.random() * 15 // 5-20%
    const timeDecay = Math.max(0, 1 - (hours / 168)) // –ó–∞—Ç—É—Ö–∞–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é
    return baseVolatility * (1 + timeDecay)
  }

  /**
   * üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞ —Ä—ã–Ω–∫–∞
   */
  private determineMarketStress(volatility: number, priceDeviation: number): 'low' | 'medium' | 'high' | 'extreme' {
    const stressScore = volatility * 0.6 + priceDeviation * 0.4
    
    if (stressScore < 5) return 'low'
    if (stressScore < 10) return 'medium'
    if (stressScore < 20) return 'high'
    return 'extreme'
  }

  /**
   * üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –≤—Å–ø–ª–µ—Å–∫–∞ –æ–±—ä–µ–º–∞
   */
  private detectVolumeSpike(): boolean {
    // –°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≤—Å–ø–ª–µ—Å–∫–∞ –æ–±—ä–µ–º–∞
    return Math.random() < 0.1 // 10% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—Å–ø–ª–µ—Å–∫–∞
  }

  /**
   * üö® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∑–∞—â–∏—Ç—ã
   */
  private async checkProtectionTriggers(metrics: VolatilityMetrics): Promise<void> {
    for (const [mechanismId, mechanism] of this.protectionMechanisms) {
      if (!mechanism.isActive) continue
      
      let shouldTrigger = false
      
      switch (mechanism.type) {
        case 'auto_buyback':
          shouldTrigger = metrics.priceDeviation >= mechanism.threshold && 
                         metrics.currentVolatility > 10
          break
          
        case 'liquidity_injection':
          shouldTrigger = metrics.currentVolatility >= mechanism.threshold
          break
          
        case 'rate_stabilization':
          shouldTrigger = metrics.priceDeviation >= mechanism.threshold
          break
          
        case 'circuit_breaker':
          shouldTrigger = metrics.marketStress === 'extreme' || 
                         metrics.currentVolatility >= mechanism.threshold
          break
      }
      
      if (shouldTrigger) {
        await this.triggerProtectionMechanism(mechanism, metrics)
      }
    }
  }

  /**
   * ‚ö° –ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∑–∞—â–∏—Ç—ã
   */
  private async triggerProtectionMechanism(mechanism: ProtectionMechanism, metrics: VolatilityMetrics): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω (–Ω–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ —á–∞—Å)
    const cooldownPeriod = 60 * 60 * 1000 // 1 —á–∞—Å
    if (Date.now() - mechanism.lastTriggered < cooldownPeriod) {
      return
    }
    
    console.log('üõ°Ô∏è Triggering protection mechanism:', mechanism.type)
    
    let intervention: MarketIntervention | null = null
    
    switch (mechanism.type) {
      case 'auto_buyback':
        intervention = await this.executeAutoBuyback(metrics)
        break
        
      case 'liquidity_injection':
        intervention = await this.executeLiquidityInjection(metrics)
        break
        
      case 'rate_stabilization':
        intervention = await this.executeRateStabilization(metrics)
        break
        
      case 'circuit_breaker':
        intervention = await this.executeCircuitBreaker(metrics)
        break
    }
    
    if (intervention) {
      this.marketInterventions.push(intervention)
      mechanism.lastTriggered = Date.now()
      mechanism.triggerCount++
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º–∞
      this.updateMechanismEffectiveness(mechanism, intervention)
    }
  }

  /**
   * üí∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–∫—É–ø NDT
   */
  private async executeAutoBuyback(metrics: VolatilityMetrics): Promise<MarketIntervention> {
    const buybackAmount = Math.min(
      this.stabilityReserve.tonBalance * 0.1, // –ú–∞–∫—Å–∏–º—É–º 10% —Ä–µ–∑–µ—Ä–≤–∞
      metrics.priceDeviation * 1000 // –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—é
    )
    
    const targetRate = 42.7 * 0.95 // –¶–µ–ª–µ–≤–æ–π –∫—É—Ä—Å –Ω–∞ 5% –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
    
    console.log('üí∞ Executing auto buyback:', buybackAmount, 'TON at rate', targetRate)
    
    // –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–∫—É–ø–∞
    const success = Math.random() > 0.1 // 90% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    const impact = success ? -metrics.priceDeviation * 0.3 : 0 // –°–Ω–∏–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 30%
    
    return {
      id: this.generateInterventionId(),
      type: 'buyback',
      amount: buybackAmount,
      targetRate,
      timestamp: Date.now(),
      success,
      impact
    }
  }

  /**
   * üíß –ò–Ω—ä–µ–∫—Ü–∏—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏
   */
  private async executeLiquidityInjection(metrics: VolatilityMetrics): Promise<MarketIntervention> {
    const injectionAmount = Math.min(
      this.stabilityReserve.tonBalance * 0.05, // –ú–∞–∫—Å–∏–º—É–º 5% —Ä–µ–∑–µ—Ä–≤–∞
      metrics.currentVolatility * 100 // –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
    )
    
    console.log('üíß Executing liquidity injection:', injectionAmount, 'TON')
    
    // –°–∏–º—É–ª—è—Ü–∏—è –∏–Ω—ä–µ–∫—Ü–∏–∏
    const success = Math.random() > 0.05 // 95% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    const impact = success ? -metrics.currentVolatility * 0.2 : 0 // –°–Ω–∏–∂–µ–Ω–∏–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ 20%
    
    return {
      id: this.generateInterventionId(),
      type: 'liquidity_add',
      amount: injectionAmount,
      timestamp: Date.now(),
      success,
      impact
    }
  }

  /**
   * ‚öñÔ∏è –°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –∫—É—Ä—Å–∞
   */
  private async executeRateStabilization(metrics: VolatilityMetrics): Promise<MarketIntervention> {
    const stabilizationAmount = Math.min(
      this.stabilityReserve.tonBalance * 0.15, // –ú–∞–∫—Å–∏–º—É–º 15% —Ä–µ–∑–µ—Ä–≤–∞
      metrics.priceDeviation * 2000 // –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—é
    )
    
    const targetRate = 42.7 // –í–æ–∑–≤—Ä–∞—Ç –∫ —Å—Ä–µ–¥–Ω–µ–º—É –∫—É—Ä—Å—É
    
    console.log('‚öñÔ∏è Executing rate stabilization:', stabilizationAmount, 'TON at rate', targetRate)
    
    // –°–∏–º—É–ª—è—Ü–∏—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
    const success = Math.random() > 0.02 // 98% —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    const impact = success ? -metrics.priceDeviation * 0.5 : 0 // –°–Ω–∏–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 50%
    
    return {
      id: this.generateInterventionId(),
      type: 'rate_fix',
      amount: stabilizationAmount,
      targetRate,
      timestamp: Date.now(),
      success,
      impact
    }
  }

  /**
   * üö® –ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
   */
  private async executeCircuitBreaker(metrics: VolatilityMetrics): Promise<MarketIntervention> {
    console.log('üö® Executing circuit breaker - Market stress:', metrics.marketStress)
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å DEX
    
    return {
      id: this.generateInterventionId(),
      type: 'sell_off',
      amount: 0, // –ù–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª–∏
      timestamp: Date.now(),
      success: true,
      impact: -metrics.currentVolatility * 0.8 // –†–µ–∑–∫–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
    }
  }

  /**
   * üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ—Ö–∞–Ω–∏–∑–º–∞
   */
  private updateMechanismEffectiveness(mechanism: ProtectionMechanism, intervention: MarketIntervention): void {
    if (intervention.success) {
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–µ
      mechanism.effectiveness = Math.min(1.0, mechanism.effectiveness + 0.01)
    } else {
      // –£–º–µ–Ω—å—à–∞–µ–º –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
      mechanism.effectiveness = Math.max(0.1, mechanism.effectiveness - 0.02)
    }
  }

  /**
   * üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–∞
   */
  async replenishReserve(amount: number, currency: 'TON' | 'NDT'): Promise<void> {
    if (currency === 'TON') {
      this.stabilityReserve.tonBalance += amount
    } else {
      this.stabilityReserve.ndtBalance += amount
    }
    
    this.stabilityReserve.totalValue = this.calculateReserveValue()
    this.stabilityReserve.lastRebalance = Date.now()
    
    console.log('üîÑ Reserve replenished:', amount, currency)
  }

  /**
   * üí∞ –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ–∑–µ—Ä–≤–∞
   */
  private calculateReserveValue(): number {
    const currentRate = 42.7 // –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å NDT/TON
    return this.stabilityReserve.tonBalance + (this.stabilityReserve.ndtBalance / currentRate)
  }

  /**
   * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞—â–∏—Ç—ã
   */
  getProtectionStats() {
    const totalInterventions = this.marketInterventions.length
    const successfulInterventions = this.marketInterventions.filter(i => i.success).length
    const successRate = totalInterventions > 0 ? successfulInterventions / totalInterventions : 0
    
    const totalImpact = this.marketInterventions.reduce((sum, i) => sum + i.impact, 0)
    const averageImpact = totalInterventions > 0 ? totalImpact / totalInterventions : 0
    
    return {
      stabilityReserve: {
        tonBalance: this.stabilityReserve.tonBalance,
        ndtBalance: this.stabilityReserve.ndtBalance,
        totalValue: this.stabilityReserve.totalValue,
        utilizationRate: this.stabilityReserve.utilizationRate
      },
      mechanisms: Array.from(this.protectionMechanisms.values()).map(m => ({
        type: m.type,
        isActive: m.isActive,
        triggerCount: m.triggerCount,
        effectiveness: m.effectiveness,
        lastTriggered: m.lastTriggered
      })),
      interventions: {
        total: totalInterventions,
        successful: successfulInterventions,
        successRate: successRate * 100,
        averageImpact: averageImpact
      },
      currentMetrics: this.volatilityHistory[this.volatilityHistory.length - 1] || null
    }
  }

  /**
   * üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∑–∞—â–∏—Ç—ã
   */
  configureMechanism(mechanismId: string, config: Partial<ProtectionMechanism>): boolean {
    const mechanism = this.protectionMechanisms.get(mechanismId)
    if (!mechanism) return false
    
    Object.assign(mechanism, config)
    this.protectionMechanisms.set(mechanismId, mechanism)
    
    return true
  }

  /**
   * üÜî –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
   */
  private generateInterventionId(): string {
    return `intervention_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
  }

  /**
   * üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
   */
  stopMonitoring(): void {
    if (this.monitoringInterval) {
      clearInterval(this.monitoringInterval)
      this.monitoringInterval = undefined
    }
    this.isMonitoring = false
  }

  /**
   * üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
   */
  restartMonitoring(): void {
    this.stopMonitoring()
    this.startMonitoring()
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞
export const volatilityProtectionSystem = new VolatilityProtectionSystem()

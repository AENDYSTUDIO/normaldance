'use client'

import React, { useState } from 'react'

interface CreateMemorialModalProps {
  onClose: () => void
  onSuccess: () => void
}

export default function CreateMemorialModal({ onClose, onSuccess }: CreateMemorialModalProps) {
  const [formData, setFormData] = useState({
    artistName: '',
    ipfsHash: '',
    heirs: [''],
    message: ''
  })
  const [isCreating, setIsCreating] = useState(false)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!formData.artistName || !formData.ipfsHash) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è')
      return
    }

    setIsCreating(true)
    
    try {
      const response = await fetch('/api/grave/memorials', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          artistName: formData.artistName,
          ipfsHash: formData.ipfsHash,
          heirs: formData.heirs.filter(heir => heir.trim() !== ''),
          message: formData.message
        })
      })

      const data = await response.json()
      
      if (data.success) {
        onSuccess()
        alert('–ú–µ–º–æ—Ä–∏–∞–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! ü™¶')
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–º–æ—Ä–∏–∞–ª–∞: ' + data.error)
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–æ—Ä–∏–∞–ª–∞:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–º–æ—Ä–∏–∞–ª–∞')
    } finally {
      setIsCreating(false)
    }
  }

  const addHeir = () => {
    setFormData(prev => ({
      ...prev,
      heirs: [...prev.heirs, '']
    }))
  }

  const removeHeir = (index: number) => {
    setFormData(prev => ({
      ...prev,
      heirs: prev.heirs.filter((_, i) => i !== index)
    }))
  }

  const updateHeir = (index: number, value: string) => {
    setFormData(prev => ({
      ...prev,
      heirs: prev.heirs.map((heir, i) => i === index ? value : heir)
    }))
  }

  return (
    <div className="modal modal-open">
      <div className="modal-box max-w-2xl">
        <h3 className="font-bold text-2xl mb-6">
          ü™¶ –°–æ–∑–¥–∞—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–µ–º–æ—Ä–∏–∞–ª
        </h3>
        
        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <label className="label">
              <span className="label-text font-semibold">–ò–º—è –∞—Ä—Ç–∏—Å—Ç–∞ *</span>
            </label>
            <input
              type="text"
              placeholder="DJ Eternal, Producer Ghost..."
              className="input input-bordered w-full"
              value={formData.artistName}
              onChange={(e) => setFormData(prev => ({ ...prev, artistName: e.target.value }))}
              required
            />
          </div>

          <div>
            <label className="label">
              <span className="label-text font-semibold">IPFS Hash *</span>
            </label>
            <input
              type="text"
              placeholder="QmYourIPFSHash123..."
              className="input input-bordered w-full"
              value={formData.ipfsHash}
              onChange={(e) => setFormData(prev => ({ ...prev, ipfsHash: e.target.value }))}
              required
            />
            <div className="label">
              <span className="label-text-alt">
                –°–æ–¥–µ—Ä–∂–∏—Ç: –∞—É–¥–∏–æ, —Ñ–æ—Ç–æ, –±–∏–æ–≥—Ä–∞—Ñ–∏—é –∞—Ä—Ç–∏—Å—Ç–∞
              </span>
            </div>
          </div>

          <div>
            <label className="label">
              <span className="label-text font-semibold">–ù–∞—Å–ª–µ–¥–Ω–∏–∫–∏ (–ø–æ–ª—É—á–∞—Ç–µ–ª–∏ –¥–æ—Ö–æ–¥–æ–≤)</span>
            </label>
            
            <div className="space-y-2">
              {formData.heirs.map((heir, index) => (
                <div key={index} className="flex gap-2">
                  <input
                    type="text"
                    placeholder="0x123...abc"
                    className="input input-bordered flex-1"
                    value={heir}
                    onChange={(e) => updateHeir(index, e.target.value)}
                  />
                  {formData.heirs.length > 1 && (
                    <button
                      type="button"
                      onClick={() => removeHeir(index)}
                      className="btn btn-error btn-sm"
                    >
                      ‚úï
                    </button>
                  )}
                </div>
              ))}
              
              <button
                type="button"
                onClick={addHeir}
                className="btn btn-outline btn-sm"
              >
                + –î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞
              </button>
            </div>
            
            <div className="label">
              <span className="label-text-alt">
                –ê–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥—ã –æ—Ç –º–µ–º–æ—Ä–∏–∞–ª–∞
              </span>
            </div>
          </div>

          <div>
            <label className="label">
              <span className="label-text font-semibold">–°–æ–æ–±—â–µ–Ω–∏–µ</span>
            </label>
            <textarea
              className="textarea textarea-bordered w-full"
              placeholder="–ü–∞–º—è—Ç—å –æ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–º –∞—Ä—Ç–∏—Å—Ç–µ..."
              value={formData.message}
              onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}
              rows={3}
            />
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg">
            <div className="flex items-start gap-2">
              <div className="text-yellow-500">‚ö†Ô∏è</div>
              <div className="text-sm text-yellow-700">
                <p><strong>–í–∞–∂–Ω–æ:</strong></p>
                <ul className="list-disc list-inside mt-1 space-y-1">
                  <li>–ú–µ–º–æ—Ä–∏–∞–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ</li>
                  <li>IPFS hash –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</li>
                  <li>–ù–∞—Å–ª–µ–¥–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç 98% –æ—Ç –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π</li>
                  <li>2% –∏–¥–µ—Ç –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</li>
                </ul>
              </div>
            </div>
          </div>

          <div className="modal-action">
            <button
              type="button"
              onClick={onClose}
              className="btn btn-ghost"
              disabled={isCreating}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            
            <button
              type="submit"
              className="btn btn-primary"
              disabled={isCreating || !formData.artistName || !formData.ipfsHash}
            >
              {isCreating ? (
                <>
                  <span className="loading loading-spinner loading-sm"></span>
                  –°–æ–∑–¥–∞–Ω–∏–µ...
                </>
              ) : (
                '–°–æ–∑–¥–∞—Ç—å –º–µ–º–æ—Ä–∏–∞–ª'
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  )
}

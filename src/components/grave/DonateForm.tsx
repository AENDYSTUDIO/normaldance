'use client'

import React, { useState } from 'react'

interface DonateFormProps {
  onDonate: (amount: number, message: string) => void
  onCancel: () => void
  isDonating: boolean
}

export default function DonateForm({ onDonate, onCancel, isDonating }: DonateFormProps) {
  const [amount, setAmount] = useState('')
  const [message, setMessage] = useState('')

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    
    const numAmount = parseFloat(amount)
    if (numAmount <= 0) {
      alert('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0')
      return
    }
    
    onDonate(numAmount, message)
  }

  const presetAmounts = [0.001, 0.01, 0.1, 0.5, 1.0]

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      <div>
        <label className="label">
          <span className="label-text">–°—É–º–º–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è (ETH)</span>
        </label>
        
        <div className="space-y-2">
          <input
            type="number"
            step="0.001"
            min="0.001"
            placeholder="0.001"
            className="input input-bordered w-full"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            required
          />
          
          <div className="flex flex-wrap gap-2">
            {presetAmounts.map((preset) => (
              <button
                key={preset}
                type="button"
                onClick={() => setAmount(preset.toString())}
                className="btn btn-sm btn-outline"
              >
                {preset} ETH
              </button>
            ))}
          </div>
        </div>
      </div>

      <div>
        <label className="label">
          <span className="label-text">–°–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</span>
        </label>
        <textarea
          className="textarea textarea-bordered w-full"
          placeholder="–°–ø–∞—Å–∏–±–æ –∑–∞ –º—É–∑—ã–∫—É! üéµ"
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          rows={3}
        />
      </div>

      <div className="bg-blue-50 p-3 rounded-lg">
        <div className="flex items-start gap-2">
          <div className="text-blue-500">‚ÑπÔ∏è</div>
          <div className="text-sm text-blue-700">
            <p><strong>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</strong></p>
            <ul className="list-disc list-inside mt-1 space-y-1">
              <li>2% –∏–¥–µ—Ç –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</li>
              <li>98% –ø–æ—Å—Ç—É–ø–∞–µ—Ç –≤ –º–µ–º–æ—Ä–∏–∞–ª—å–Ω—ã–π —Ñ–æ–Ω–¥</li>
              <li>–ù–∞—Å–ª–µ–¥–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –¥–æ—Ö–æ–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
              <li>–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –±–ª–æ–∫—á–µ–π–Ω</li>
            </ul>
          </div>
        </div>
      </div>

      <div className="modal-action">
        <button
          type="button"
          onClick={onCancel}
          className="btn btn-ghost"
          disabled={isDonating}
        >
          –û—Ç–º–µ–Ω–∞
        </button>
        
        <button
          type="submit"
          className="btn btn-primary"
          disabled={isDonating || !amount}
        >
          {isDonating ? (
            <>
              <span className="loading loading-spinner loading-sm"></span>
              –û—Ç–ø—Ä–∞–≤–∫–∞...
            </>
          ) : (
            '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ'
          )}
        </button>
      </div>
    </form>
  )
}

# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è NORMALDANCE –Ω–∞ Vercel

param(
    [switch]$SetupEnv,
    [switch]$Help
)

# Colors
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Blue = "Blue"

function Write-Status {
    param($Message)
    Write-Host "[INFO] $Message" -ForegroundColor $Blue
}

function Write-Success {
    param($Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor $Green
}

function Write-Warning {
    param($Message)
    Write-Host "[WARNING] $Message" -ForegroundColor $Yellow
}

function Write-Error {
    param($Message)
    Write-Host "[ERROR] $Message" -ForegroundColor $Red
}

# Check if Vercel CLI is installed
function Test-VercelCLI {
    Write-Status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Vercel CLI..."
    try {
        $vercelVersion = vercel --version
        Write-Success "Vercel CLI –Ω–∞–π–¥–µ–Ω: $vercelVersion"
        return $true
    }
    catch {
        Write-Warning "Vercel CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        try {
            npm install -g vercel
            Write-Success "Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            return $true
        }
        catch {
            Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Vercel CLI"
            return $false
        }
    }
}

# Prepare project for Vercel
function Initialize-VercelProject {
    Write-Status "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è Vercel..."
    
    # Copy optimized vercel.json
    if (Test-Path "vercel.optimized.json") {
        Copy-Item "vercel.optimized.json" "vercel.json" -Force
        Write-Success "–û–±–Ω–æ–≤–ª–µ–Ω vercel.json"
    }
    
    # Copy Vercel-optimized server
    if (Test-Path "server.vercel.ts") {
        Copy-Item "server.vercel.ts" "server.ts" -Force
        Write-Success "–û–±–Ω–æ–≤–ª–µ–Ω server.ts –¥–ª—è Vercel"
    }
    
    # Ensure .vercelignore exists
    if (-not (Test-Path ".vercelignore")) {
        Write-Warning "–°–æ–∑–¥–∞–µ–º .vercelignore"
        New-Item -ItemType File -Name ".vercelignore" -Force
    }
    
    Write-Success "–ü—Ä–æ–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è Vercel"
}

# Login to Vercel
function Connect-Vercel {
    Write-Status "–í—Ö–æ–¥ –≤ Vercel..."
    try {
        vercel login
        Write-Success "–í—Ö–æ–¥ –≤ Vercel –≤—ã–ø–æ–ª–Ω–µ–Ω"
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ Vercel: $_"
        throw
    }
}

# Deploy to Vercel
function Deploy-Vercel {
    Write-Status "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel..."
    try {
        vercel --prod
        Write-Success "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: $_"
        throw
    }
}

# Setup environment variables
function Set-EnvironmentVariables {
    Write-Status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    Write-Host ""
    Write-Host "üìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:" -ForegroundColor $Yellow
    Write-Host ""
    Write-Host "1. DATABASE_URL - —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    Write-Host "2. REDIS_URL - —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis"
    Write-Host "3. NEXTAUTH_URL - URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    Write-Host "4. NEXTAUTH_SECRET - —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á"
    Write-Host "5. PINATA_API_KEY - API –∫–ª—é—á Pinata"
    Write-Host "6. PINATA_SECRET_KEY - —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á Pinata"
    Write-Host "7. SOLANA_RPC_URL - URL Solana RPC"
    Write-Host "8. NDT_PROGRAM_ID - ID –ø—Ä–æ–≥—Ä–∞–º–º—ã NDT"
    Write-Host "9. TRACKNFT_PROGRAM_ID - ID –ø—Ä–æ–≥—Ä–∞–º–º—ã TrackNFT"
    Write-Host "10. STAKING_PROGRAM_ID - ID –ø—Ä–æ–≥—Ä–∞–º–º—ã Staking"
    Write-Host ""
    Write-Host "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor $Blue
    Write-Host "vercel env add VARIABLE_NAME"
    Write-Host ""
    
    $setupEnv = Read-Host "–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ–π—á–∞—Å? (y/n)"
    
    if ($setupEnv -eq "y" -or $setupEnv -eq "Y") {
        Write-Status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        
        try {
            # Basic environment variables
            vercel env add NODE_ENV production
            vercel env add NEXT_TELEMETRY_DISABLED 1
            
            Write-Success "–ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
            Write-Warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel dashboard"
        }
        catch {
            Write-Warning "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: $_"
        }
    }
}

# Show deployment info
function Show-DeploymentInfo {
    Write-Success "üéâ NORMALDANCE —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ Vercel!"
    Write-Host ""
    Write-Host "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:" -ForegroundColor $Blue
    Write-Host "  üåê Dashboard: https://vercel.com/dashboard"
    Write-Host "  üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://vercel.com/docs"
    Write-Host ""
    Write-Host "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor $Green
    Write-Host "  vercel ls                    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤"
    Write-Host "  vercel logs                  # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    Write-Host "  vercel env ls                # –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
    Write-Host "  vercel env add VAR_NAME      # –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é"
    Write-Host "  vercel --prod                # –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω"
    Write-Host ""
    Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor $Yellow
    Write-Host "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    Write-Host "  2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã (PlanetScale, Upstash)"
    Write-Host "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Pusher –¥–ª—è WebSocket"
    Write-Host "  4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    Write-Host ""
    Write-Host "‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Vercel:" -ForegroundColor $Red
    Write-Host "  - –ù–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    Write-Host "  - –ù–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ Redis"
    Write-Host "  - –ù–µ—Ç Socket.IO (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Pusher)"
    Write-Host "  - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (10 —Å–µ–∫)"
}

# Show help
function Show-Help {
    Write-Host "üöÄ Vercel Deployment Script for NORMALDANCE" -ForegroundColor $Blue
    Write-Host ""
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" -ForegroundColor $Yellow
    Write-Host "  .\scripts\deploy-vercel.ps1              # –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
    Write-Host "  .\scripts\deploy-vercel.ps1 -SetupEnv     # –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
    Write-Host "  .\scripts\deploy-vercel.ps1 -Help         # –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
    Write-Host "–ü—Ä–∏–º–µ—Ä—ã:" -ForegroundColor $Green
    Write-Host "  .\scripts\deploy-vercel.ps1"
    Write-Host "  .\scripts\deploy-vercel.ps1 -SetupEnv"
    Write-Host ""
}

# Main function
function Main {
    if ($Help) {
        Show-Help
        return
    }
    
    Write-Status "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ NORMALDANCE –Ω–∞ Vercel..."
    Write-Host ""
    
    if (-not (Test-VercelCLI)) {
        Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Vercel CLI"
        exit 1
    }
    
    if ($SetupEnv) {
        Set-EnvironmentVariables
        return
    }
    
    Initialize-VercelProject
    Connect-Vercel
    Deploy-Vercel
    Set-EnvironmentVariables
    Show-DeploymentInfo
    
    Write-Success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# Run main function
Main

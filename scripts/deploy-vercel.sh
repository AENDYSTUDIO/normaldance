#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è NORMALDANCE –Ω–∞ Vercel

set -e

echo "üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ NORMALDANCE –Ω–∞ Vercel..."

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${BLUE}[INFO]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# Check if Vercel CLI is installed
check_vercel_cli() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Vercel CLI..."
    if ! command -v vercel &> /dev/null; then
        print_warning "Vercel CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        npm install -g vercel
        print_success "Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "Vercel CLI –Ω–∞–π–¥–µ–Ω"
    fi
}

# Prepare project for Vercel
prepare_project() {
    print_status "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è Vercel..."
    
    # Copy optimized vercel.json
    if [ -f "vercel.optimized.json" ]; then
        cp vercel.optimized.json vercel.json
        print_success "–û–±–Ω–æ–≤–ª–µ–Ω vercel.json"
    fi
    
    # Copy Vercel-optimized server
    if [ -f "server.vercel.ts" ]; then
        cp server.vercel.ts server.ts
        print_success "–û–±–Ω–æ–≤–ª–µ–Ω server.ts –¥–ª—è Vercel"
    fi
    
    # Ensure .vercelignore exists
    if [ ! -f ".vercelignore" ]; then
        print_warning "–°–æ–∑–¥–∞–µ–º .vercelignore"
        touch .vercelignore
    fi
    
    print_success "–ü—Ä–æ–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è Vercel"
}

# Login to Vercel
login_vercel() {
    print_status "–í—Ö–æ–¥ –≤ Vercel..."
    vercel login
    print_success "–í—Ö–æ–¥ –≤ Vercel –≤—ã–ø–æ–ª–Ω–µ–Ω"
}

# Deploy to Vercel
deploy_vercel() {
    print_status "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel..."
    
    # Deploy
    vercel --prod
    
    print_success "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# Setup environment variables
setup_env_vars() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    echo ""
    echo "üìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo ""
    echo "1. DATABASE_URL - —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    echo "2. REDIS_URL - —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis"
    echo "3. NEXTAUTH_URL - URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "4. NEXTAUTH_SECRET - —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á"
    echo "5. PINATA_API_KEY - API –∫–ª—é—á Pinata"
    echo "6. PINATA_SECRET_KEY - —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á Pinata"
    echo "7. SOLANA_RPC_URL - URL Solana RPC"
    echo "8. NDT_PROGRAM_ID - ID –ø—Ä–æ–≥—Ä–∞–º–º—ã NDT"
    echo "9. TRACKNFT_PROGRAM_ID - ID –ø—Ä–æ–≥—Ä–∞–º–º—ã TrackNFT"
    echo "10. STAKING_PROGRAM_ID - ID –ø—Ä–æ–≥—Ä–∞–º–º—ã Staking"
    echo ""
    echo "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "vercel env add VARIABLE_NAME"
    echo ""
    
    read -p "–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ–π—á–∞—Å? (y/n): " setup_env
    
    if [ "$setup_env" = "y" ] || [ "$setup_env" = "Y" ]; then
        print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        
        # Basic environment variables
        vercel env add NODE_ENV production
        vercel env add NEXT_TELEMETRY_DISABLED 1
        
        print_success "–ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        print_warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel dashboard"
    fi
}

# Show deployment info
show_info() {
    print_success "üéâ NORMALDANCE —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ Vercel!"
    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:"
    echo "  üåê Dashboard: https://vercel.com/dashboard"
    echo "  üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://vercel.com/docs"
    echo ""
    echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  vercel ls                    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤"
    echo "  vercel logs                  # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  vercel env ls                # –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
    echo "  vercel env add VAR_NAME      # –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é"
    echo "  vercel --prod                # –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã (PlanetScale, Upstash)"
    echo "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Pusher –¥–ª—è WebSocket"
    echo "  4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo ""
    echo "‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Vercel:"
    echo "  - –ù–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  - –ù–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ Redis"
    echo "  - –ù–µ—Ç Socket.IO (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Pusher)"
    echo "  - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (10 —Å–µ–∫)"
}

# Main function
main() {
    print_status "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ NORMALDANCE –Ω–∞ Vercel..."
    echo ""
    
    check_vercel_cli
    prepare_project
    login_vercel
    deploy_vercel
    setup_env_vars
    show_info
    
    print_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# Run main function
main "$@"
